name: Deploy Frontend

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-2
  S3_BUCKET: citypass-emergencias-fe
  CF_DIST_ID: E3A0XUPEU868ZU
  VITE_API_BASE: http://98.87.68.144:5000

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - name: Lint
        run: npm run lint -- --max-warnings=0

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - name: Run unit tests
        run: npm run test:ci
      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - name: Build
        run: npm run build
        env:
          VITE_API_BASE: ${{ env.VITE_API_BASE }}
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::756074066107:role/ci-cd-frontend-role
          aws-region: ${{ env.AWS_REGION }}
      - name: Sync to S3
        run: aws s3 sync dist/ s3://$S3_BUCKET --delete
      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id $CF_DIST_ID --paths "/index.html" "/"
